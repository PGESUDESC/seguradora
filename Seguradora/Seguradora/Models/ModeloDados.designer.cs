#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Seguradora.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Seguro")]
	public partial class ModeloDadosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnoModelo(AnoModelo instance);
    partial void UpdateAnoModelo(AnoModelo instance);
    partial void DeleteAnoModelo(AnoModelo instance);
    partial void InsertMarca(Marca instance);
    partial void UpdateMarca(Marca instance);
    partial void DeleteMarca(Marca instance);
    partial void InsertModelo(Modelo instance);
    partial void UpdateModelo(Modelo instance);
    partial void DeleteModelo(Modelo instance);
    partial void InsertVeiculo(Veiculo instance);
    partial void UpdateVeiculo(Veiculo instance);
    partial void DeleteVeiculo(Veiculo instance);
    #endregion
		
		public ModeloDadosDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SeguroConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ModeloDadosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModeloDadosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModeloDadosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModeloDadosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AnoModelo> AnoModelos
		{
			get
			{
				return this.GetTable<AnoModelo>();
			}
		}
		
		public System.Data.Linq.Table<Marca> Marcas
		{
			get
			{
				return this.GetTable<Marca>();
			}
		}
		
		public System.Data.Linq.Table<Modelo> Modelos
		{
			get
			{
				return this.GetTable<Modelo>();
			}
		}
		
		public System.Data.Linq.Table<Veiculo> Veiculos
		{
			get
			{
				return this.GetTable<Veiculo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnoModelo")]
	public partial class AnoModelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Codigo;
		
		private string _Descricao;
		
		private int _Marca;
		
		private int _Modelo;
		
		private int _TipoVeiculo;
		
		private EntitySet<Veiculo> _Veiculos;
		
		private EntityRef<Marca> _Marca1;
		
		private EntityRef<Modelo> _Modelo1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnMarcaChanging(int value);
    partial void OnMarcaChanged();
    partial void OnModeloChanging(int value);
    partial void OnModeloChanged();
    partial void OnTipoVeiculoChanging(int value);
    partial void OnTipoVeiculoChanged();
    #endregion
		
		public AnoModelo()
		{
			this._Veiculos = new EntitySet<Veiculo>(new Action<Veiculo>(this.attach_Veiculos), new Action<Veiculo>(this.detach_Veiculos));
			this._Marca1 = default(EntityRef<Marca>);
			this._Modelo1 = default(EntityRef<Modelo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="Int NOT NULL")]
		public int Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					if (this._Marca1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="Int NOT NULL")]
		public int Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					if (this._Modelo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModeloChanging(value);
					this.SendPropertyChanging();
					this._Modelo = value;
					this.SendPropertyChanged("Modelo");
					this.OnModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoVeiculo", DbType="Int NOT NULL")]
		public int TipoVeiculo
		{
			get
			{
				return this._TipoVeiculo;
			}
			set
			{
				if ((this._TipoVeiculo != value))
				{
					this.OnTipoVeiculoChanging(value);
					this.SendPropertyChanging();
					this._TipoVeiculo = value;
					this.SendPropertyChanged("TipoVeiculo");
					this.OnTipoVeiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnoModelo_Veiculo", Storage="_Veiculos", ThisKey="ID", OtherKey="AnoModelo")]
		public EntitySet<Veiculo> Veiculos
		{
			get
			{
				return this._Veiculos;
			}
			set
			{
				this._Veiculos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_AnoModelo", Storage="_Marca1", ThisKey="Marca", OtherKey="ID", IsForeignKey=true)]
		public Marca Marca1
		{
			get
			{
				return this._Marca1.Entity;
			}
			set
			{
				Marca previousValue = this._Marca1.Entity;
				if (((previousValue != value) 
							|| (this._Marca1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca1.Entity = null;
						previousValue.AnoModelos.Remove(this);
					}
					this._Marca1.Entity = value;
					if ((value != null))
					{
						value.AnoModelos.Add(this);
						this._Marca = value.ID;
					}
					else
					{
						this._Marca = default(int);
					}
					this.SendPropertyChanged("Marca1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_AnoModelo", Storage="_Modelo1", ThisKey="Modelo", OtherKey="ID", IsForeignKey=true)]
		public Modelo Modelo1
		{
			get
			{
				return this._Modelo1.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo1.Entity;
				if (((previousValue != value) 
							|| (this._Modelo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo1.Entity = null;
						previousValue.AnoModelos.Remove(this);
					}
					this._Modelo1.Entity = value;
					if ((value != null))
					{
						value.AnoModelos.Add(this);
						this._Modelo = value.ID;
					}
					else
					{
						this._Modelo = default(int);
					}
					this.SendPropertyChanged("Modelo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.AnoModelo1 = this;
		}
		
		private void detach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.AnoModelo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marca")]
	public partial class Marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Codigo;
		
		private string _Descricao;
		
		private int _TipoVeiculo;
		
		private EntitySet<AnoModelo> _AnoModelos;
		
		private EntitySet<Modelo> _Modelos;
		
		private EntitySet<Veiculo> _Veiculos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnTipoVeiculoChanging(int value);
    partial void OnTipoVeiculoChanged();
    #endregion
		
		public Marca()
		{
			this._AnoModelos = new EntitySet<AnoModelo>(new Action<AnoModelo>(this.attach_AnoModelos), new Action<AnoModelo>(this.detach_AnoModelos));
			this._Modelos = new EntitySet<Modelo>(new Action<Modelo>(this.attach_Modelos), new Action<Modelo>(this.detach_Modelos));
			this._Veiculos = new EntitySet<Veiculo>(new Action<Veiculo>(this.attach_Veiculos), new Action<Veiculo>(this.detach_Veiculos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoVeiculo", DbType="Int NOT NULL")]
		public int TipoVeiculo
		{
			get
			{
				return this._TipoVeiculo;
			}
			set
			{
				if ((this._TipoVeiculo != value))
				{
					this.OnTipoVeiculoChanging(value);
					this.SendPropertyChanging();
					this._TipoVeiculo = value;
					this.SendPropertyChanged("TipoVeiculo");
					this.OnTipoVeiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_AnoModelo", Storage="_AnoModelos", ThisKey="ID", OtherKey="Marca")]
		public EntitySet<AnoModelo> AnoModelos
		{
			get
			{
				return this._AnoModelos;
			}
			set
			{
				this._AnoModelos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Modelos", ThisKey="ID", OtherKey="Marca")]
		public EntitySet<Modelo> Modelos
		{
			get
			{
				return this._Modelos;
			}
			set
			{
				this._Modelos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Veiculo", Storage="_Veiculos", ThisKey="ID", OtherKey="Marca")]
		public EntitySet<Veiculo> Veiculos
		{
			get
			{
				return this._Veiculos;
			}
			set
			{
				this._Veiculos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnoModelos(AnoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = this;
		}
		
		private void detach_AnoModelos(AnoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = null;
		}
		
		private void attach_Modelos(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = this;
		}
		
		private void detach_Modelos(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = null;
		}
		
		private void attach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = this;
		}
		
		private void detach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modelo")]
	public partial class Modelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Codigo;
		
		private string _Descricao;
		
		private int _Marca;
		
		private int _TipoVeiculo;
		
		private EntitySet<AnoModelo> _AnoModelos;
		
		private EntitySet<Veiculo> _Veiculos;
		
		private EntityRef<Marca> _Marca1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnMarcaChanging(int value);
    partial void OnMarcaChanged();
    partial void OnTipoVeiculoChanging(int value);
    partial void OnTipoVeiculoChanged();
    #endregion
		
		public Modelo()
		{
			this._AnoModelos = new EntitySet<AnoModelo>(new Action<AnoModelo>(this.attach_AnoModelos), new Action<AnoModelo>(this.detach_AnoModelos));
			this._Veiculos = new EntitySet<Veiculo>(new Action<Veiculo>(this.attach_Veiculos), new Action<Veiculo>(this.detach_Veiculos));
			this._Marca1 = default(EntityRef<Marca>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="Int NOT NULL")]
		public int Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					if (this._Marca1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoVeiculo", DbType="Int NOT NULL")]
		public int TipoVeiculo
		{
			get
			{
				return this._TipoVeiculo;
			}
			set
			{
				if ((this._TipoVeiculo != value))
				{
					this.OnTipoVeiculoChanging(value);
					this.SendPropertyChanging();
					this._TipoVeiculo = value;
					this.SendPropertyChanged("TipoVeiculo");
					this.OnTipoVeiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_AnoModelo", Storage="_AnoModelos", ThisKey="ID", OtherKey="Modelo")]
		public EntitySet<AnoModelo> AnoModelos
		{
			get
			{
				return this._AnoModelos;
			}
			set
			{
				this._AnoModelos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Veiculo", Storage="_Veiculos", ThisKey="ID", OtherKey="Modelo")]
		public EntitySet<Veiculo> Veiculos
		{
			get
			{
				return this._Veiculos;
			}
			set
			{
				this._Veiculos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Marca1", ThisKey="Marca", OtherKey="ID", IsForeignKey=true)]
		public Marca Marca1
		{
			get
			{
				return this._Marca1.Entity;
			}
			set
			{
				Marca previousValue = this._Marca1.Entity;
				if (((previousValue != value) 
							|| (this._Marca1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca1.Entity = null;
						previousValue.Modelos.Remove(this);
					}
					this._Marca1.Entity = value;
					if ((value != null))
					{
						value.Modelos.Add(this);
						this._Marca = value.ID;
					}
					else
					{
						this._Marca = default(int);
					}
					this.SendPropertyChanged("Marca1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnoModelos(AnoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo1 = this;
		}
		
		private void detach_AnoModelos(AnoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo1 = null;
		}
		
		private void attach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo1 = this;
		}
		
		private void detach_Veiculos(Veiculo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Veiculo")]
	public partial class Veiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _Valor;
		
		private int _Marca;
		
		private int _Modelo;
		
		private int _AnoModelo;
		
		private string _Combustivel;
		
		private string _CodigoFipe;
		
		private string _MesReferencia;
		
		private int _TipoVeiculo;
		
		private string _SiglaCombustivel;
		
		private EntityRef<AnoModelo> _AnoModelo1;
		
		private EntityRef<Marca> _Marca1;
		
		private EntityRef<Modelo> _Modelo1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValorChanging(decimal value);
    partial void OnValorChanged();
    partial void OnMarcaChanging(int value);
    partial void OnMarcaChanged();
    partial void OnModeloChanging(int value);
    partial void OnModeloChanged();
    partial void OnAnoModeloChanging(int value);
    partial void OnAnoModeloChanged();
    partial void OnCombustivelChanging(string value);
    partial void OnCombustivelChanged();
    partial void OnCodigoFipeChanging(string value);
    partial void OnCodigoFipeChanged();
    partial void OnMesReferenciaChanging(string value);
    partial void OnMesReferenciaChanged();
    partial void OnTipoVeiculoChanging(int value);
    partial void OnTipoVeiculoChanged();
    partial void OnSiglaCombustivelChanging(string value);
    partial void OnSiglaCombustivelChanged();
    #endregion
		
		public Veiculo()
		{
			this._AnoModelo1 = default(EntityRef<AnoModelo>);
			this._Marca1 = default(EntityRef<Marca>);
			this._Modelo1 = default(EntityRef<Modelo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(10,2) NOT NULL")]
		public decimal Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="Int NOT NULL")]
		public int Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					if (this._Marca1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="Int NOT NULL")]
		public int Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					if (this._Modelo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModeloChanging(value);
					this.SendPropertyChanging();
					this._Modelo = value;
					this.SendPropertyChanged("Modelo");
					this.OnModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnoModelo", DbType="Int NOT NULL")]
		public int AnoModelo
		{
			get
			{
				return this._AnoModelo;
			}
			set
			{
				if ((this._AnoModelo != value))
				{
					if (this._AnoModelo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnoModeloChanging(value);
					this.SendPropertyChanging();
					this._AnoModelo = value;
					this.SendPropertyChanged("AnoModelo");
					this.OnAnoModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Combustivel", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Combustivel
		{
			get
			{
				return this._Combustivel;
			}
			set
			{
				if ((this._Combustivel != value))
				{
					this.OnCombustivelChanging(value);
					this.SendPropertyChanging();
					this._Combustivel = value;
					this.SendPropertyChanged("Combustivel");
					this.OnCombustivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoFipe", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CodigoFipe
		{
			get
			{
				return this._CodigoFipe;
			}
			set
			{
				if ((this._CodigoFipe != value))
				{
					this.OnCodigoFipeChanging(value);
					this.SendPropertyChanging();
					this._CodigoFipe = value;
					this.SendPropertyChanged("CodigoFipe");
					this.OnCodigoFipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MesReferencia", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MesReferencia
		{
			get
			{
				return this._MesReferencia;
			}
			set
			{
				if ((this._MesReferencia != value))
				{
					this.OnMesReferenciaChanging(value);
					this.SendPropertyChanging();
					this._MesReferencia = value;
					this.SendPropertyChanged("MesReferencia");
					this.OnMesReferenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoVeiculo", DbType="Int NOT NULL")]
		public int TipoVeiculo
		{
			get
			{
				return this._TipoVeiculo;
			}
			set
			{
				if ((this._TipoVeiculo != value))
				{
					this.OnTipoVeiculoChanging(value);
					this.SendPropertyChanging();
					this._TipoVeiculo = value;
					this.SendPropertyChanged("TipoVeiculo");
					this.OnTipoVeiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiglaCombustivel", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string SiglaCombustivel
		{
			get
			{
				return this._SiglaCombustivel;
			}
			set
			{
				if ((this._SiglaCombustivel != value))
				{
					this.OnSiglaCombustivelChanging(value);
					this.SendPropertyChanging();
					this._SiglaCombustivel = value;
					this.SendPropertyChanged("SiglaCombustivel");
					this.OnSiglaCombustivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnoModelo_Veiculo", Storage="_AnoModelo1", ThisKey="AnoModelo", OtherKey="ID", IsForeignKey=true)]
		public AnoModelo AnoModelo1
		{
			get
			{
				return this._AnoModelo1.Entity;
			}
			set
			{
				AnoModelo previousValue = this._AnoModelo1.Entity;
				if (((previousValue != value) 
							|| (this._AnoModelo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnoModelo1.Entity = null;
						previousValue.Veiculos.Remove(this);
					}
					this._AnoModelo1.Entity = value;
					if ((value != null))
					{
						value.Veiculos.Add(this);
						this._AnoModelo = value.ID;
					}
					else
					{
						this._AnoModelo = default(int);
					}
					this.SendPropertyChanged("AnoModelo1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Veiculo", Storage="_Marca1", ThisKey="Marca", OtherKey="ID", IsForeignKey=true)]
		public Marca Marca1
		{
			get
			{
				return this._Marca1.Entity;
			}
			set
			{
				Marca previousValue = this._Marca1.Entity;
				if (((previousValue != value) 
							|| (this._Marca1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca1.Entity = null;
						previousValue.Veiculos.Remove(this);
					}
					this._Marca1.Entity = value;
					if ((value != null))
					{
						value.Veiculos.Add(this);
						this._Marca = value.ID;
					}
					else
					{
						this._Marca = default(int);
					}
					this.SendPropertyChanged("Marca1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Veiculo", Storage="_Modelo1", ThisKey="Modelo", OtherKey="ID", IsForeignKey=true)]
		public Modelo Modelo1
		{
			get
			{
				return this._Modelo1.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo1.Entity;
				if (((previousValue != value) 
							|| (this._Modelo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo1.Entity = null;
						previousValue.Veiculos.Remove(this);
					}
					this._Modelo1.Entity = value;
					if ((value != null))
					{
						value.Veiculos.Add(this);
						this._Modelo = value.ID;
					}
					else
					{
						this._Modelo = default(int);
					}
					this.SendPropertyChanged("Modelo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
