@model Seguradora.Aditamento

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Aditamento</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Cadastro</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descriao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descriao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Categoria", EnumHelper.GetSelectList(typeof(Seguradora.Comum.Categoria)), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marca, "Marca", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Marca", (IEnumerable<SelectListItem>)ViewBag.Marcas, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modelo, "Modelo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Modelo", (IEnumerable<SelectListItem>)ViewBag.Modelos, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ano de fabricação", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnoFabricacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnoFabricacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Percentual", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Percentual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Percentual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Adicionar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {

    <script type="text/javascript">
    function getModelos(marca) {
        $.ajax({
            url: "@Url.Action("Modelos", "Api")",
            data: { codigoMarca: marca },
        dataType: "json",
        type: "POST",
        error: function () {
            alert("Ocorreu um erro.");
        },
        success: function (data) {
            var items = "";
            $.each(data, function (i, item) {
                items += "<option value=\"" + item.Value + "\">" + item.Text + "</option>";
            });
            $("#Modelo").html(items);
        }
    });
    }

    function getAnoModelo(marca, modelo) {
        $.ajax({
            url: "@Url.Action("AnoModelos", "Api")",
            data: { codigoMarca: marca, codigoModelo: modelo },
        dataType: "json",
        type: "POST",
        error: function () {
            alert("Ocorreu um erro.");
        },
        success: function (data) {
            var items = "";
            $.each(data, function (i, item) {
                items += "<option value=\"" + item.Value + "\">" + item.Text + "</option>";
            });
            $("#AnoModelo").html(items);
        }
    });
    }

    function getVeiculos(marca, modelo) {
        $.ajax({
            url: "@Url.Action("Veiculos", "Api")",
            data: { codigoMarca: marca, codigoModelo: modelo },
        dataType: "json",
        type: "POST",
        error: function () {
            alert("Ocorreu um erro.");
        },
        success: function (data) {
            var items = "";
            $.each(data, function (i, item) {
                items += "<option value=\"" + item.Value + "\">" + item.Text + "</option>";
            });
            $("#Veiculo").html(items);
        }
    });
    }

    $(document).ready(function () {
        $("#Marca").change(function () {
            var marca = $("#Marca").val();
            getModelos(marca);
        });
        $("#Modelo").change(function () {
            var marca = $("#Marca").val();
            var modelo = $("#Modelo").val();
            getAnoModelo(marca, modelo);
            getVeiculos(marca, modelo);
        });
    });
    </script>
}
